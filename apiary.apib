FORMAT: 1A
HOST: http://api-beta.opsee.co/

# Opsee API
This is the publicly accessible API for the Opsee backend. 

# Group Signups
Signups are the resources that get created when a user first
signs up for the service.  For a signup to become an active login
they must have a verification email sent with an activation token.

## Signups Collection [/signups]
### Create a Signup [POST]
+ Request (application/json)

        {
            "email": "person@gmail.com",
            "password": "a_password"
        }
        
+ Response 201 (application/json)

        {"email": "person@gmail.com"}
        
+ Response 409 (application/json)

        "Conflict: this email address is already signed up."

## Activate Signups [/signups/send-activation?email=]
### Activate a Signup [POST]

Activating signups requires an authorization header that has superuser
privileges. Superuser privileges are attached to the login table in the
database.

+ Parameters
    + email (string) ... Email address of the signup to activate

+ Request (application/json)
    + Headers

            Authorization: HMAC 1--2jmj7l5rSw0yVb_vlWAYkK_YBwk=

+ Response 201

# Group Activations
The activation resource gets created when a signup is activated for
inclusion into the beta.

## Activations Collection [/activations/{id}/activate]
### Request an Activation [GET]

Requesting an activation by ID provides confirmation that an
activation exists and has not yet been used.

+ Response 200 (application/json)
    + Body

            {
                "id" : "url-safe-unique-identifier",
                "email" : "email@domain.com",
                "name" : "Users Name",
                "used" : false,
                "create_at" : "2015-02-18T02:15:15Z",
                "updated_at" : "2015-02-18T02:15:15Z"
            }

### Confirm an Activation [POST]

Confirming the activation using its unique ID ensures validation of the
user's email. The body of the post should be the rest of the info necessary
to create a login, the password and the customer's unique customer ID (chosen by them).
In the case that the customer ID is already taken, this resource will return
status code 409 Conflict. Upon success the activation ID will be marked used
in the database and a 303 response code returned, along with a Location header
for the resulting login.

+ Request (application/json)

        {"password" : "a password", "customer_id" : "a-dns-safe-string"}

+ Response 303 (application/json)
    + Headers

            Location: /logins/123

# Group Authenticate
The authentication resource provides a means by which the user
can provide credentials and get back a time limited token for use
in subsequent API calls.

## Authenticate Collection [/authenticate/password]
### Authenticate via password [POST]
+ Request (application/json)

        {"email": "person@gmail.com", "password" : "a_password"}
        
+ Response 201 (application/json)
    + Headers
    
            X-Auth-HMAC: 1--2jmj7l5rSw0yVb_vlWAYkK_YBwk=

    + Body
            
            "HMAC 1--2jmj7l5rSw0yVb_vlWAYkK_YBwk="

# Group Environments
Environments provide a way for customers to segment their data into
different partitions. For instance, a customer might have one environment
for their production install, and a separate environment for dev.
For any resource that is owned by an environment, that resource's
path is namespaced by the environment ID.

## Environment [/environments/{id}]
A single environment.

The environment resource has the following attributes:

- id
- name
- created_at
- updated_at

The states *created_at* and *updated_at* are assigned by the Opsee API
at the moment of creation / update.  The state *id* is required to be unique
per customer, and cannot be changed once set.

+ Parameters
    + id (string) ... ID of the environment, must be a url safe string.
    
+ Model (application/json)

            {
                "id" : "url-safe-unique-identifier", 
                "name" : "The Display Name", 
                "create_at" : "2015-02-18T02:15:15Z",
                "updated_at" : "2015-02-18T02:15:15Z"
            }

### Retrieve a Single Environment [GET]
+ Response 200

    [Environment][]
    
### Create a New Environment [POST]
Creates an environment at the given ID.

+ Request (application/json)
    + Headers
            
            Authorization: HMAC 1--2jmj7l5rSw0yVb_vlWAYkK_YBwk=
            
    + Body
    
            {"name": "The Display Name"}
            
+ Response 201

    [Environment][]
    
### Edit an Environment [PATCH]
Update the display name of an environment. The ID is immutable and will
not be modified even if included in the hash.

+ Request (application/json)
    + Headers
    
            Authorization: HMAC 1--2jmj7l5rSw0yVb_vlWAYkK_YBwk=

    + Body

            {"name": "New Display Name"}
        
+ Response 200

    [Environment][]

### Delete an Environment [DELETE]
+ Response 204

## Environments Collection [/environments]
### List All Environments [GET]
Lists all the environments linked to the token's user ID.
+ Request
    + Headers
    
            Authorization: HMAC 1--2jmj7l5rSw0yVb_vlWAYkK_YBwk=

+ Response 200 (application/json)

        [
            {
                "id" : "url-safe-unique-identifier", 
                "name" : "The Display Name", 
                "create_at" : "2015-02-18T02:15:15Z",
                "updated_at" : "2015-02-18T02:15:15Z"
            }
        ]
